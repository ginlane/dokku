#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
export DOKKU_ROOT=${DOKKU_ROOT:="/home/dokku"}

# latest stable NGINX 1.4.x with websocket support
add-apt-repository -y ppa:nginx/stable
apt-get update
apt-get install -y nginx dnsutils

if ! grep -q dokku-nginx-reload "/etc/sudoers"; then
  touch /etc/sudoers.tmp
  cp /etc/sudoers /tmp/sudoers.new
  echo "%dokku ALL=(ALL)NOPASSWD:/etc/init.d/nginx reload # dokku-nginx-reload" >> /tmp/sudoers.new
  EDITOR="cp /tmp/sudoers.new" visudo
  rm /tmp/sudoers.new
fi

echo "include $DOKKU_ROOT/*/nginx.conf;" > /etc/nginx/conf.d/dokku.conf

# set up docker API endpoint
chmod 0777 /var/run/docker.sock
rm -rf $DOKKU_ROOT/docker
mkdir $DOKKU_ROOT/docker

cat<<EOF > $DOKKU_ROOT/docker/nginx.conf
upstream docker { server unix:///var/run/docker.sock; }
server {
  listen      80;
  server_name docker.ginlane.com;
  location    / {
    proxy_pass  http://docker;
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host \$http_host;
    proxy_set_header X-Forwarded-Proto \$scheme;
    proxy_set_header X-Forwarded-For \$remote_addr;
    proxy_set_header X-Forwarded-Port \$server_port;
    proxy_set_header X-Request-Start \$msec;
  }
}
EOF

# create local url for pulling in the SSH key when building docker containers later
rm -rf $DOKKU_ROOT/localhost
mkdir $DOKKU_ROOT/localhost
mkdir $DOKKU_ROOT/ginlane
cp /root/.ssh/id_rsa.pub $DOKKU_ROOT/localhost
cp /root/.ssh/id_rsa $DOKKU_ROOT/localhost
chmod 0644 $DOKKU_ROOT/localhost/id_rsa

cat<<EOF > $DOKKU_ROOT/ginlane/nginx.conf
server {
  listen 80;
  server_name ginlane.com;
  return 301 $scheme://ginlanemedia.com$request_uri;
}
EOF

cat<<EOF > $DOKKU_ROOT/localhost/nginx.conf
server {
	listen       80;
	server_name  localhost.com;
	root $DOKKU_ROOT/localhost;

	location /public_key {
	    try_files $uri /id_rsa.pub \$uri;
	}

	location /private_key {
	    try_files $uri /id_rsa \$uri;
	}
}
EOF

echo "127.0.0.1       localhost.com" >> /etc/hosts

sed -i 's/# server_names_hash_bucket_size/server_names_hash_bucket_size/' /etc/nginx/nginx.conf

if [[ ! -f  "$DOKKU_ROOT/VHOST" ]]; then
  [[ $(dig +short $(< "$DOKKU_ROOT/HOSTNAME")) ]] && cp "$DOKKU_ROOT/HOSTNAME" "$DOKKU_ROOT/VHOST"
fi

sudo /etc/init.d/nginx start
